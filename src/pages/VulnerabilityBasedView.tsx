import { useVulnerabilities } from '@/hooks/useVulnerabilities';
import VulnerabilityTable from '@/components/tables/VulnerabilityTable';
import VulnerabilityFilters from '@/components/filters/VulnerabilityFilters';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { AlertTriangle, Shield, Clock, Users } from 'lucide-react';

const VulnerabilityBasedView = () => {
  const {
    filteredVulnerabilities,
    filters,
    setFilters,
    loading,
    error,
    updateVulnerabilities,
  } = useVulnerabilities();

  if (loading) {
    return (
      <div className="space-y-6">
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
          {[...Array(4)].map((_, i) => (
            <Card key={i} className="animate-pulse">
              <CardContent className="p-6">
                <div className="h-4 bg-muted rounded w-3/4 mb-2"></div>
                <div className="h-8 bg-muted rounded w-1/2"></div>
              </CardContent>
            </Card>
          ))}
        </div>
      </div>
    );
  }

  if (error) {
    return (
      <div className="text-center py-12">
        <AlertTriangle className="h-12 w-12 text-destructive mx-auto mb-4" />
        <h2 className="text-xl font-semibold mb-2">Error Loading Data</h2>
        <p className="text-muted-foreground">{error}</p>
      </div>
    );
  }

  const stats = {
    total: filteredVulnerabilities.length,
    critical: filteredVulnerabilities.filter(v => v.severity === 'critical').length,
    high: filteredVulnerabilities.filter(v => v.severity === 'high').length,
    open: filteredVulnerabilities.filter(v => v.status === 'open').length,
    overdue: filteredVulnerabilities.filter(v => v.days_overdue > 0).length,
  };

  return (
    <div className="space-y-6">
      {/* Page Header */}
      <div className="flex items-center justify-between">
        <div>
          <h1 className="text-3xl font-bold">All Vulnerabilities</h1>
          <p className="text-muted-foreground">
            Comprehensive view of all vulnerabilities across all hosts
          </p>
        </div>
      </div>

      {/* Summary Cards */}
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-5 gap-4">
        <Card>
          <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
            <CardTitle className="text-sm font-medium">Total</CardTitle>
            <Shield className="h-4 w-4 text-primary" />
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold">{stats.total}</div>
          </CardContent>
        </Card>

        <Card>
          <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
            <CardTitle className="text-sm font-medium">critical</CardTitle>
            <AlertTriangle className="h-4 w-4 text-severity-critical" />
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold text-severity-critical">{stats.critical}</div>
          </CardContent>
        </Card>

        <Card>
          <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
            <CardTitle className="text-sm font-medium">high</CardTitle>
            <AlertTriangle className="h-4 w-4 text-severity-high" />
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold text-severity-high">{stats.high}</div>
          </CardContent>
        </Card>

        <Card>
          <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
            <CardTitle className="text-sm font-medium">open</CardTitle>
            <Clock className="h-4 w-4 text-status-open" />
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold text-status-open">{stats.open}</div>
          </CardContent>
        </Card>

        <Card>
          <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
            <CardTitle className="text-sm font-medium">Overdue</CardTitle>
            <Users className="h-4 w-4 text-destructive" />
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold">
              {stats.overdue > 0 ? (
                <Badge variant="destructive">{stats.overdue}</Badge>
              ) : (
                <span className="text-muted-foreground">0</span>
              )}
            </div>
          </CardContent>
        </Card>
      </div>

      {/* Filters */}
      <VulnerabilityFilters
        filters={filters}
        onFiltersChange={setFilters}
        vulnerabilities={filteredVulnerabilities}
        filteredVulnerabilities={filteredVulnerabilities}
      />

      {/* Vulnerabilities Table */}
      <VulnerabilityTable
        vulnerabilities={filteredVulnerabilities}
        title="All Vulnerabilities"
        onBulkUpdate={updateVulnerabilities}
      />
    </div>
  );
};

export default VulnerabilityBasedView;
