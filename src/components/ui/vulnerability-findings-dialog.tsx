import { useState } from 'react';
import { Button } from '@/components/ui/button';
import {
  Dialog,
  DialogContent,
  DialogDescription,
  DialogHeader,
  DialogTitle,
  DialogTrigger,
} from '@/components/ui/dialog';
import { Vulnerability } from '@/types/vulnerability';
import VulnerabilityTable from '@/components/tables/VulnerabilityTable';
import { FileText } from 'lucide-react';

interface VulnerabilityFindingsDialogProps {
  vulnerabilityName: string;
  findings: Vulnerability[];
  onUpdate?: (updates: Array<{name: string, host: string} & Partial<Vulnerability>>) => Promise<void>;
  children: React.ReactNode;
}

export const VulnerabilityFindingsDialog = ({
  vulnerabilityName,
  findings,
  onUpdate,
  children
}: VulnerabilityFindingsDialogProps) => {
  const [isOpen, setIsOpen] = useState(false);

  return (
    <Dialog open={isOpen} onOpenChange={setIsOpen}>
      <DialogTrigger asChild>
        {children}
      </DialogTrigger>
      <DialogContent className="max-w-7xl max-h-[90vh] overflow-hidden flex flex-col">
        <DialogHeader className="flex-shrink-0">
          <DialogTitle className="flex items-center gap-2">
            <FileText className="h-5 w-5" />
            {vulnerabilityName}
          </DialogTitle>
          <DialogDescription>
            All findings for this vulnerability ({findings.length} total)
          </DialogDescription>
        </DialogHeader>

        <div className="flex-1 overflow-hidden">
          <VulnerabilityTable
            vulnerabilities={findings}
            title={`${vulnerabilityName} - All Findings`}
            onBulkUpdate={onUpdate}
            compact={true}
          />
        </div>
      </DialogContent>
    </Dialog>
  );
};